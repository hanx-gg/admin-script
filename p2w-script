local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local runService = game:GetService("RunService")

local humanoid
local rootPart

local function getChar()
	local char = player.Character or player.CharacterAdded:Wait()
	humanoid = char:WaitForChild("Humanoid")
	rootPart = char:WaitForChild("HumanoidRootPart")
end

getChar()
player.CharacterAdded:Connect(getChar)

-- === Fly variables ===
local flying = false
local flyVelocity, flyGyro

local function toggleFly(on)
	if on then
		if flying then return end
		flying = true

		flyVelocity = Instance.new("BodyVelocity")
		flyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
		flyVelocity.Velocity = Vector3.zero
		flyVelocity.Parent = rootPart

		flyGyro = Instance.new("BodyGyro")
		flyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
		flyGyro.CFrame = rootPart.CFrame
		flyGyro.P = 9e4
		flyGyro.Parent = rootPart

		runService:BindToRenderStep("FlyControl", Enum.RenderPriority.Character.Value, function()
			if not flying then return end
			local cam = workspace.CurrentCamera
			local moveDir = Vector3.zero
			if UIS:IsKeyDown(Enum.KeyCode.W) then moveDir += cam.CFrame.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.S) then moveDir -= cam.CFrame.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.A) then moveDir -= cam.CFrame.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.D) then moveDir += cam.CFrame.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.Space) then moveDir += cam.CFrame.UpVector end
			if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir -= cam.CFrame.UpVector end
			flyVelocity.Velocity = moveDir.Unit * 100
			flyGyro.CFrame = cam.CFrame
		end)
	else
		flying = false
		runService:UnbindFromRenderStep("FlyControl")
		if flyVelocity then flyVelocity:Destroy() end
		if flyGyro then flyGyro:Destroy() end
	end
end

-- === UI Creation ===
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AdminPanel"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 320, 0, 260)
frame.Position = UDim2.new(0, 40, 0.5, -130)
frame.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "‚öôÔ∏è Admin Panel"
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextXAlignment = Enum.TextXAlignment.Center

-- === Slider Function ===
local function createSlider(name, min, max, default, posY, updateFn)
	local label = Instance.new("TextLabel", frame)
	label.Size = UDim2.new(0, 300, 0, 20)
	label.Position = UDim2.new(0, 10, 0, posY)
	label.BackgroundTransparency = 1
	label.Text = name .. ": " .. default
	label.TextColor3 = Color3.new(0, 0, 0)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left

	local sliderBack = Instance.new("Frame", frame)
	sliderBack.Size = UDim2.new(0, 300, 0, 6)
	sliderBack.Position = UDim2.new(0, 10, 0, posY + 22)
	sliderBack.BackgroundColor3 = Color3.fromRGB(200, 200, 200)

	local sliderFill = Instance.new("Frame", sliderBack)
	sliderFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
	sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)

	local dragging = false

	local function update(input)
		local relX = math.clamp((input.Position.X - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
		sliderFill.Size = UDim2.new(relX, 0, 1, 0)
		local value = math.floor(min + (max - min) * relX)
		label.Text = name .. ": " .. value
		updateFn(value)
	end

	sliderBack.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			update(input)
		end
	end)

	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			update(input)
		end
	end)
end

-- === Toggle Fly Button ===
local function createFlyToggle(posY)
	local button = Instance.new("TextButton", frame)
	button.Size = UDim2.new(0, 300, 0, 30)
	button.Position = UDim2.new(0, 10, 0, posY)
	button.Text = "üõ´ Enable Fly"
	button.BackgroundColor3 = Color3.fromRGB(180, 255, 180)
	button.TextColor3 = Color3.new(0, 0, 0)
	button.Font = Enum.Font.GothamBold
	button.TextSize = 16

	local isFlying = false

	button.MouseButton1Click:Connect(function()
		isFlying = not isFlying
		button.Text = isFlying and "üõ¨ Disable Fly" or "üõ´ Enable Fly"
		button.BackgroundColor3 = isFlying and Color3.fromRGB(255, 120, 120) or Color3.fromRGB(180, 255, 180)
		toggleFly(isFlying)
	end)
end

-- === Create Controls ===
createSlider("WalkSpeed", 16, 100, 16, 40, function(v)
	if humanoid then humanoid.WalkSpeed = v end
end)

createSlider("JumpPower", 50, 200, 50, 100, function(v)
	if humanoid then humanoid.JumpPower = v end
end)

createFlyToggle(160)

-- === Tombol Close Panel ===
local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 0)
closeBtn.Text = "‚úñ"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 16
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
closeBtn.BorderSizePixel = 0

closeBtn.MouseButton1Click:Connect(function()
	frame.Visible = false
end)

-- === Kill Tool Setup ===
local function createKillTool()
	local tool = Instance.new("Tool")
	tool.Name = "P2W Sword"
	tool.RequiresHandle = true

	local handle = Instance.new("Part")
	handle.Name = "Handle"
	handle.Size = Vector3.new(1, 4, 1)
	handle.BrickColor = BrickColor.new("Bright red")
	handle.TopSurface = Enum.SurfaceType.Smooth
	handle.BottomSurface = Enum.SurfaceType.Smooth
	handle.Parent = tool

	tool.GripForward = Vector3.new(0, 0, -1)
	tool.GripPos = Vector3.new(0, -1.5, 0)
	tool.GripRight = Vector3.new(1, 0, 0)
	tool.GripUp = Vector3.new(0, 1, 0)

	local damage = 100

	tool.Activated:Connect(function()
		local char = player.Character
		if not char then return end
		local hitbox = handle.Touched:Connect(function(hit)
			local h = hit.Parent:FindFirstChildOfClass("Humanoid")
			if h and h ~= humanoid then
				h:TakeDamage(damage)
			end
		end)
		wait(0.2)
		hitbox:Disconnect()
	end)

	return tool
end

-- === Tombol Beri Kill Tool ===
local giveToolBtn = Instance.new("TextButton", frame)
giveToolBtn.Size = UDim2.new(0, 300, 0, 30)
giveToolBtn.Position = UDim2.new(0, 10, 0, 210)
giveToolBtn.Text = "üó°Ô∏è Give Kill Tool"
giveToolBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 150)
giveToolBtn.TextColor3 = Color3.new(0, 0, 0)
giveToolBtn.Font = Enum.Font.GothamBold
giveToolBtn.TextSize = 16
giveToolBtn.MouseButton1Click:Connect(function()
	local tool = createKillTool()
	tool.Parent = player.Backpack
end)

-- === Tombol Hapus Kill Tool ===
local removeToolBtn = Instance.new("TextButton", frame)
removeToolBtn.Size = UDim2.new(0, 300, 0, 30)
removeToolBtn.Position = UDim2.new(0, 10, 0, 245)
removeToolBtn.Text = "üóëÔ∏è Remove Kill Tool"
removeToolBtn.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
removeToolBtn.TextColor3 = Color3.new(0, 0, 0)
removeToolBtn.Font = Enum.Font.GothamBold
removeToolBtn.TextSize = 16
removeToolBtn.MouseButton1Click:Connect(function()
	for _, item in ipairs(player.Backpack:GetChildren()) do
		if item:IsA("Tool") and item.Name == "P2W Sword" then
			item:Destroy()
		end
	end
end)
